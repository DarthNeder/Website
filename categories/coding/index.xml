<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coding on crazyc4t's blog</title><link>https://blog.crazyc4t.xyz/categories/coding/</link><description>Recent content in Coding on crazyc4t's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 22 Mar 2023 11:59:47 -0500</lastBuildDate><atom:link href="https://blog.crazyc4t.xyz/categories/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Gophercise #1 "Quiz" Walkthrough!</title><link>https://blog.crazyc4t.xyz/blog/gophercise/</link><pubDate>Wed, 22 Mar 2023 11:59:47 -0500</pubDate><guid>https://blog.crazyc4t.xyz/blog/gophercise/</guid><description>&lt;img src="https://blog.crazyc4t.xyz/images/gophercises_punching.gif" alt="Featured image of post Gophercise #1 "Quiz" Walkthrough!" />&lt;p>What&amp;rsquo;s up guys! It&amp;rsquo;s crazyc4t here, once again, I&amp;rsquo;m sorry for not being fully active these past couple of weeks, but I&amp;rsquo;m here for you guys and I&amp;rsquo;m bringing you the best way to learn golang, and that is coding with it!&lt;/p>
&lt;h2 id="what-is-gophercises">What is Gophercises?&lt;/h2>
&lt;p>&lt;a class="link" href="https://gophercises.com/" target="_blank" rel="noopener"
>Gophercises&lt;/a> is a webpage made by &lt;a class="link" href="https://www.calhoun.io/" target="_blank" rel="noopener"
>Jon Calhoun&lt;/a>, an experienced web developer with go, and we takes us through a series of exercises to code with golang making us improve our way to code in go by exploring topics like channels, concurrency, methods, using the standard library and more! The best thing of all is that is free! So you won&amp;rsquo;t lose anything trying it out, instead you will have tons of fun like I did!&lt;/p>
&lt;p>In gophercises there are a lot of exercises ranging from an order from 1 through 20, and of course they increase in difficulty, the exercises are solved by the author in case you get lost so you can get a lead, but also the author adds some additional exercises to the exercise, making you go for the extra mile.&lt;/p>
&lt;h2 id="the-quiz-exercise">The &amp;ldquo;Quiz&amp;rdquo; Exercise&lt;/h2>
&lt;p>This exercise is based on the idea of a quiz, hence the name for it, it is a program that reads questions and answers from a csv file and count how many questions did the user got right or wrong, and ask the following questions no matter if the answer was right or wrong, all of these fields are customizable through flags, the format of the csv is as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">5+5,10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7+3,10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1+1,2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8+3,11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1+2,3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8+6,14
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3+1,4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1+4,5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5+1,6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2+3,5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3+3,6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2+4,6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5+2,7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Printing at the end of the program the results of the user, after completing that, the second part is to add a timer to the exercise, being the default flag 30 seconds, but it needs to be customizable to the end user, and without any delay, cut the quiz if the time runs out and don&amp;rsquo;t wait if the user is going to answer or not the question, so ungiven answers are counted as wrong answers.&lt;/p>
&lt;h3 id="bonus-exercises">Bonus Exercises&lt;/h3>
&lt;ul>
&lt;li>Clean up the answer so it will count even if it has white spaces, capitalization, etc&amp;hellip;&lt;/li>
&lt;li>Add an option to shuffle the order of the quiz each time is runned.&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s the official repo for the quiz exercise with detailed instructions and solutions from various students: &lt;a class="link" href="https://github.com/gophercises/quiz" target="_blank" rel="noopener"
>https://github.com/gophercises/quiz&lt;/a>&lt;/p>
&lt;p>I suggest that you first try it out on your own before reading my solution, give your best shot! 頑張って！&lt;/p>
&lt;h2 id="the-solution">The solution&lt;/h2>
&lt;p>I will explain the code detail by detail, so no worries about it!&lt;/p>
&lt;h3 id="import-the-required-packages">Import the required packages&lt;/h3>
&lt;p>We will be using:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/encoding/csv" target="_blank" rel="noopener"
>&lt;code>encoding/csv&lt;/code>&lt;/a> for reading the csv file.&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/flag@go1.20.2" target="_blank" rel="noopener"
>&lt;code>flag&lt;/code>&lt;/a> for creating command-line flags to give the user personalization.&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/fmt" target="_blank" rel="noopener"
>&lt;code>fmt&lt;/code>&lt;/a> for formatting I/O (print &amp;amp; scan).&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/log" target="_blank" rel="noopener"
>&lt;code>log&lt;/code>&lt;/a> for logging errors that happen.&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/math/rand" target="_blank" rel="noopener"
>&lt;code>math/rand&lt;/code>&lt;/a> for randomization when shuffling order.&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/os" target="_blank" rel="noopener"
>&lt;code>os&lt;/code>&lt;/a> for accessing the OS through the library.&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/string" target="_blank" rel="noopener"
>&lt;code>strings&lt;/code>&lt;/a> for cleaning the answer string.&lt;/li>
&lt;li>&lt;a class="link" href="https://pkg.go.dev/time" target="_blank" rel="noopener"
>&lt;code>time&lt;/code>&lt;/a> for the quiz timer.&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/zakaria-chahboun/cute" target="_blank" rel="noopener"
>&lt;code>cute&lt;/code>&lt;/a> Pretty output library made by &lt;a class="link" href="https://github.com/zakaria-chahboun" target="_blank" rel="noopener"
>zakaria-chahboun&lt;/a>, thanks!&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;encoding/csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;flag&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/zakaria-chahboun/cute&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="structs-for-handling-flags">Structs for handling flags&lt;/h3>
&lt;p>We create a struct of the type &lt;code>Exercise&lt;/code> that has a question and an answer, and the struct &lt;code>Flag&lt;/code> that has a Csv, Limit and Shuffle.&lt;/p>
&lt;p>We create a function to check our errors that we will use later, and to parse the flags we will save each data received in a varible of type &amp;ldquo;Flag&amp;rdquo;, and return it&amp;rsquo;s pointer since we used the dereferenced variable (the memory address)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Struct of the exercise
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Exercise&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Question&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Answer&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Struct of the flags
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Flags&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Csv&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Limit&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Shuffle&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Check my errors
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">checkErr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">description&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">description&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Save each flag result in an variable type Flag, parse it and return it&amp;#39;s pointer.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">parsing&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">Flags&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">options&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Flags&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CommandLine&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewFlagSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Args&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ExitOnError&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StringVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Csv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;problems.csv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Insert the filepath of the csv file.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">IntVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Limit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;limit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Insert time limit of the quiz&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BoolVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Shuffle&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;shuffle&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Wether the order of the csv file is shuffled or not&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Parse&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">options&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="reading-the-csv-and-creating-the-shuffle-feature">Reading the csv and creating the shuffle feature&lt;/h3>
&lt;p>In the &lt;code>read&lt;/code> function create a varible that will store the csv file from the flag, defer it until we no longer need it, create a new reader and read all the fields at once, after that check if there were any errors, and return the whole reading that is a map of type &lt;code>string&lt;/code>.&lt;/p>
&lt;p>In the &lt;code>serialize&lt;/code> function read the whole data and &amp;ldquo;serialize&amp;rdquo; it to a type &lt;code>Exercise&lt;/code>, meaning reading the whole data and assign each field if it belongs to the answer or question field.&lt;/p>
&lt;p>After that create the shuffle function where it receives a slice of data type &lt;code>Exercise&lt;/code>, where it takes the length of the slice, and the indexes of the slice, being &lt;code>i&lt;/code> and &lt;code>j&lt;/code>, changing the index position of each value stored in the slice, if we remember correctly the &lt;code>Exercise&lt;/code> data type stores a question and an answer, so when using the shuffle function, it will change the position of an exercise in the exercises slice, not a question or answer, but the whole exercise.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Read csv all at once
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">read&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">csvFile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">parsing&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">Csv&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">checkErr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error opening file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">csvFile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// Do not close it until finished
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">r&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">csv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">csvFile&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// New reader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FieldsPerRecord&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="c1">// Read all fields, do not expect a fixed number
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">reading&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadAll&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// Data read
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">checkErr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error reading file&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">reading&lt;/span> &lt;span class="c1">// Give the data read as a result
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// From the data read, create a slice that supports values type Exercise
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Exercise&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">Exercises&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Exercise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">exercise&lt;/span> &lt;span class="nx">Exercise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">record&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exercise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Question&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">record&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exercise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Answer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">record&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Exercises&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Exercises&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">exercise&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">Exercises&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// From an slice of type Exercise, shuffle the order of the exercises
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">shuffleOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exercises&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Exercise&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">rand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Shuffle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">exercises&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="the-cute-output">The cute output&lt;/h3>
&lt;p>Using the &lt;a class="link" href="https://github.com/zakaria-chahboun/cute" target="_blank" rel="noopener"
>cute&lt;/a> library, we can create a list that will print out the quiz results, including:&lt;/p>
&lt;ul>
&lt;li>Correct answers&lt;/li>
&lt;li>Incorrect answers&lt;/li>
&lt;li>Total Questions&lt;/li>
&lt;/ul>
&lt;p>All of this being stored in the &lt;code>quizResults&lt;/code> function.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Creates cute list that prints quiz results
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">quizResults&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">correct&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">questions&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">results&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BrightBlue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Quiz Results!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Addf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BrightGreen&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Correct Answers: %d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">correct&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Addf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BrightRed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Incorrect Answers: %d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">questions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">correct&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Addf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BrightPurple&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Total Questions: %d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">questions&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">results&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="the-func-main">The func main&lt;/h3>
&lt;p>Here it gets complex, so let&amp;rsquo;s break it down step by step:&lt;/p>
&lt;ol>
&lt;li>Create timer, serialize the whole csv reading, check if the user wants shuffling.&lt;/li>
&lt;li>Range the exercises, and print it to the user, receive the answer in a channel, avoiding incorrect time.&lt;/li>
&lt;li>Use the concurrent select keyword, where if the timer channel runs out, it will print the results and exit.&lt;/li>
&lt;li>If an answer is received, check if it is correct or not, count it and store it.&lt;/li>
&lt;li>If the user ended the quiz before the time, print the results and exit the program.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">reply&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">correct&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">questions&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">timer&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewTimer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Duration&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">parsing&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">Limit&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Timer duration
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">Exercises&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">read&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1">// Slice with exercises
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nf">parsing&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">Shuffle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">shuffleOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Exercises&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// if true, shuffle order
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">Exercises&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// iterate over the exercises slice
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Exercise&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Question&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;= &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">answerCh&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// create a channel where it will receive the answer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// while the timer run, listen to the answer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scanln&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">answerCh&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">reply&lt;/span> &lt;span class="c1">// store the scanned reply in the channel
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">select&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">C&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1">// when the timer runs out
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// print new line for pretty output
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Time is over!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">quizResults&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">correct&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">questions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// print cute quiz result
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// exit with success
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="nx">reply&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">answerCh&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1">// store the answer channel in the reply variable
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">TrimSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">Exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Answer&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// trim spaces of the reply to avoid incorrect replies
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Correct!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">correct&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="c1">// count the correct replies
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">cute&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Incorrect!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Your reply:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">TrimSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">reply&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;Answer:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Exercises&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">Answer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// if incorrect, show the correct answer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">questions&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="c1">// count the questions
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">quizResults&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">correct&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">questions&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="gophercise-1-solved">Gophercise #1 Solved!&lt;/h2>
&lt;p>There you have it homeboi!! Hope you enjoyed my solution of the gophercise, I will leave my github repo where I stored the solution if you want to check the whole code out, give a star or fork it, I&amp;rsquo;m so glad to write blog posts again so I will be here soon, expect tons of blog posts coming!&lt;/p>
&lt;p>Github repo: &lt;a class="link" href="https://github.com/crazyc4t/quiz" target="_blank" rel="noopener"
>https://github.com/crazyc4t/quiz&lt;/a>&lt;/p></description></item><item><title>Programming with go!</title><link>https://blog.crazyc4t.xyz/blog/gostart/</link><pubDate>Sun, 28 Aug 2022 13:25:00 -0500</pubDate><guid>https://blog.crazyc4t.xyz/blog/gostart/</guid><description>&lt;img src="https://blog.crazyc4t.xyz/images/gopherjumping.gif" alt="Featured image of post Programming with go!" />&lt;h1 id="how-to-start-programming-with-go">How to start programming with Go&lt;/h1>
&lt;p>Hello guys it&amp;rsquo;s crazyc4t once again, sorry for being a bit distant on my blog but prepare yourselves because there&amp;rsquo;s more content in the oven!&lt;/p>
&lt;p>I disappeared but with a purpose, I was laser-locked focused learning go! And it is really fun, but first&amp;hellip;&lt;/p>
&lt;h2 id="what-is-go">What is go?&lt;/h2>
&lt;p>&lt;img src="https://blog.crazyc4t.xyz/images/gopher-dance-long-3x.gif"
loading="lazy"
alt="Gopher"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://go.dev/" target="_blank" rel="noopener"
>Go&lt;/a> is an open-source programming language supported by Google, created by Ken Thompson and Rob Pike, the creators of the UNIX operating system, made for Google-sized problems, being Go a static fast-compiled language, that includes native concurrency, garbage collection and efficiency at scale.&lt;/p>
&lt;h2 id="why-go">Why go?&lt;/h2>
&lt;p>Go is a programming language easy to pick up and get started with (as we are going to do in this post!) and easier if you come from other programming languages, it&amp;rsquo;s syntax is similar to C, it has built-in concurrency and a robust standard library, the go community is growing as time passes and it features tons of modules, libraries, tools to play with and documentation to learn from like this one!&lt;/p>
&lt;p>Go is used for Google-sized problems, making FAANG interested in go, these are companies that use go to power their software:&lt;/p>
&lt;ul>
&lt;li>Google&lt;/li>
&lt;li>PayPal&lt;/li>
&lt;li>American Express&lt;/li>
&lt;li>Microsoft&lt;/li>
&lt;li>Meta&lt;/li>
&lt;li>Twitch&lt;/li>
&lt;li>Tweeter&lt;/li>
&lt;li>Netflix&lt;/li>
&lt;/ul>
&lt;p>And so much more companies as well are joining the list since is really easy to pick up and the safety+speed concept that helps them right quality code, and make debugging really easy, since the compiler lints the errors you have in your code before you even compile it!&lt;/p>
&lt;p>Go is used on different code purposes like:&lt;/p>
&lt;ul>
&lt;li>Cloud &amp;amp; network services&lt;/li>
&lt;li>Command-line interfaces&lt;/li>
&lt;li>Web development&lt;/li>
&lt;li>DevOps&lt;/li>
&lt;/ul>
&lt;p>Projects that were built with go are:&lt;/p>
&lt;ul>
&lt;li>Docker&lt;/li>
&lt;li>Kubernetes&lt;/li>
&lt;li>Hugo&lt;/li>
&lt;li>Cockroach DB&lt;/li>
&lt;li>Gophish&lt;/li>
&lt;li>Arduino-CLI&lt;/li>
&lt;li>Github-CLI&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started-with-go">Getting started with go!&lt;/h2>
&lt;p>&lt;img src="https://blog.crazyc4t.xyz/images/witch-learning.png"
loading="lazy"
alt="Gopher"
>&lt;/p>
&lt;p>We need to setup our coding environment to code with go, first we need to install it.&lt;/p>
&lt;h3 id="installation-of-go">Installation of go&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Linux:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Debian/Ubuntu:&lt;/strong> &lt;code>sudo apt install golang&lt;/code>&lt;/li>
&lt;li>&lt;strong>RHEL/Fedora:&lt;/strong> &lt;code>sudo dnf install go&lt;/code>&lt;/li>
&lt;li>&lt;strong>Arch BTW:&lt;/strong> &lt;code>sudo pacman -S go&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Windows &amp;amp; macOS:&lt;/strong>
&lt;ul>
&lt;li>Go to this website and install the binary: &lt;a class="link" href="https://go.dev/dl" target="_blank" rel="noopener"
>https://go.dev/dl&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>That&amp;rsquo;s it! Check if you have it installed by checking it&amp;rsquo;s version: &lt;code>go version&lt;/code>&lt;/p>
&lt;h3 id="setting-up-your-text-editor">Setting up your text editor&lt;/h3>
&lt;p>You can use any type of text editor you want but my personal recommendation is:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://vscodium.com/" target="_blank" rel="noopener"
>VSCodium&lt;/a> (VSCode FOSS binary)
&lt;ul>
&lt;li>Install the &lt;a class="link" href="https://code.visualstudio.com/docs/languages/go" target="_blank" rel="noopener"
>go extension&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://neovim.io/" target="_blank" rel="noopener"
>Neovim&lt;/a>
&lt;ul>
&lt;li>Install the &amp;ldquo;gopls&amp;rdquo; LSP and the &amp;ldquo;gofmt&amp;rdquo; formatter using your favorite LSP installer (&lt;a class="link" href="https://github.com/williamboman/nvim-lsp-installer" target="_blank" rel="noopener"
>lsp-installer&lt;/a>, &lt;a class="link" href="https://github.com/williamboman/mason.nvim" target="_blank" rel="noopener"
>mason.nvim&lt;/a>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://www.jetbrains.com/go/" target="_blank" rel="noopener"
>Jetbrains&amp;rsquo;s Goland&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="write-some-code">Write some code!&lt;/h2>
&lt;h3 id="hello-world">Hello world!&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Print hello world!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// meaning that it should be compiled as a executable program, not as a shared libary
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span> &lt;span class="c1">// The format package from the standard libary for printing the string
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello Gopher!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After coding you can run it by just doing so:
&lt;code>go run main.go&lt;/code>&lt;/p>
&lt;p>Or you can compile it for your system!
&lt;code>go build main.go&lt;/code>&lt;/p>
&lt;h3 id="lets-make-a-greeter">Let&amp;rsquo;s make a greeter!&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello! What&amp;#39;s your name? &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="c1">// creating a variable without a value of type string
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Scan the input text and format it determined by the type
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;How are you doing?&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After scratching the surface of go, this is the next step&amp;hellip;&lt;/p>
&lt;h2 id="keep-learning">Keep learning!&lt;/h2>
&lt;p>&lt;img src="https://blog.crazyc4t.xyz/images/hiking.png"
loading="lazy"
alt="Gopher"
>&lt;/p>
&lt;p>These are some resources that are awesome!&lt;/p>
&lt;h3 id="webpages">Webpages&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://gobyexample.com/" target="_blank" rel="noopener"
>https://gobyexample.com/&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://go.dev/tour/welcome/1" target="_blank" rel="noopener"
>https://go.dev/tour/welcome/1&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tutorials">Tutorials&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://youtu.be/yyUHQIec83I" target="_blank" rel="noopener"
>TechWorld with Nana Go for beginners&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://youtu.be/YS4e4q9oBaU" target="_blank" rel="noopener"
>FreeCodeCamp 7-hour Go tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.udemy.com/course/go-programming-golang-the-complete-developers-guide/" target="_blank" rel="noopener"
>Go programming: The complete developer&amp;rsquo;s guide&lt;/a> (It&amp;rsquo;s a udemy course)&lt;/li>
&lt;/ul>
&lt;h3 id="exercises">Exercises&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.codewars.com/" target="_blank" rel="noopener"
>CodeWars&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://exercism.org/tracks/go" target="_blank" rel="noopener"
>Exercism&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gophercises.com/" target="_blank" rel="noopener"
>Gophercises&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="books">Books&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="http://shop.oreilly.com/product/0636920046516.do" target="_blank" rel="noopener"
>Introducing Go&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.oreilly.com/library/view/concurrency-in-go/9781491941294/" target="_blank" rel="noopener"
>Concurrency Go&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.gopl.io/" target="_blank" rel="noopener"
>The Go programming language&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="thank-you-for-reading">Thank you for reading!&lt;/h2>
&lt;p>I&amp;rsquo;m learning go at the moment so expect more go content coming your way!&lt;/p></description></item><item><title>How to code your own discord bot!</title><link>https://blog.crazyc4t.xyz/blog/discordbot/</link><pubDate>Fri, 11 Feb 2022 11:19:06 -0500</pubDate><guid>https://blog.crazyc4t.xyz/blog/discordbot/</guid><description>&lt;img src="https://blog.crazyc4t.xyz/images/botdemo.gif" alt="Featured image of post How to code your own discord bot!" />&lt;h1 id="patrick-star-bot-">Patrick Star Bot 📕&lt;/h1>
&lt;p>&lt;img src="https://img.shields.io/github/license/crazyc4t/PatrickStar?color=brightgreen"
loading="lazy"
alt="GitHub License"
>
&lt;img src="https://img.shields.io/github/last-commit/crazyc4t/PatrickStar"
loading="lazy"
alt="GitHub last commit"
>&lt;/p>
&lt;p>This is my first time programming a bot on discord with discord.js!
This bot is about having my classes at my fingertips, so it
gives links with special commands that facilitate the process.
You are free to clone the code and use it the way you want!
You can edit it and make it your own!&lt;/p>
&lt;p>&lt;img src="https://blog.crazyc4t.xyz/images/botdemo.gif"
loading="lazy"
alt="Demo"
>&lt;/p>
&lt;h2 id="commands">Commands&lt;/h2>
&lt;p>&lt;strong>Prefix: 9&lt;/strong>&lt;/p>
&lt;p>The prefix means that is the initial character that is used to communicate
with the bot!&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Functionality&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>9info&lt;/td>
&lt;td>Information about the project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9help&lt;/td>
&lt;td>Shows all the commands available&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9mail&lt;/td>
&lt;td>Sends a gmail link&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9idukay&lt;/td>
&lt;td>Sends a idukay link (learning platform from my school)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9day&lt;/td>
&lt;td>It shows the classes of the day&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="want-to-edit-it-for-yourself-follow-along">Want to edit it for yourself? Follow along!&lt;/h2>
&lt;p>The code itself is documented so go check it out &lt;a class="link" href="bot.js" >here!&lt;/a>&lt;/p>
&lt;p>let&amp;rsquo;s do this step by step!&lt;/p>
&lt;h3 id="requirements">Requirements&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://nodejs.org/en/" target="_blank" rel="noopener"
>Node JS&lt;/a>
&lt;ul>
&lt;li>if you are on linux use this fast command!&lt;/li>
&lt;li>Arch Linux: &lt;code>sudo pacman -S nodejs&lt;/code>&lt;/li>
&lt;li>Debian/Ubuntu: &lt;code>sudo apt install nodejs&lt;/code>&lt;/li>
&lt;li>Redhat/Fedora: &lt;code>sudo dnf install nodejs&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://www.npmjs.com/" target="_blank" rel="noopener"
>npm&lt;/a> (Already a Node JS dependency)&lt;/li>
&lt;li>&lt;a class="link" href="https://git-scm.com/" target="_blank" rel="noopener"
>git&lt;/a> (Already installed on Linux)&lt;/li>
&lt;/ul>
&lt;p>And some knowledge on javascript!&lt;/p>
&lt;p>&lt;strong>Guide yourself with the official discord.js &lt;a class="link" href="https://discordjs.guide/#before-you-begin" target="_blank" rel="noopener"
>docs&lt;/a>!&lt;/strong>&lt;/p>
&lt;h2 id="before-we-begin">Before we begin&lt;/h2>
&lt;p>We need to clone this repo with this command:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/crazyc4t/PatrickStar.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And then to install the discord js library with a simple npm command!&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm install discord.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>create a new application in the developer portal of discord, &lt;a class="link" href="https://discord.com/developers/applications" target="_blank" rel="noopener"
>over here!&lt;/a>,
once you go there create a new app and invite it to your server!&lt;/p>
&lt;p>After that, open the project folder in your favourite text editor and let&amp;rsquo;s start!&lt;/p>
&lt;h3 id="logging-into-discord">Logging into discord&lt;/h3>
&lt;p>Now in your folder project where you have your bot.js file, and create a &lt;code>config.json&lt;/code> that is where
we are going to store sensitive data so we can ignore it in a &lt;code>.gitignore&lt;/code> file.&lt;/p>
&lt;p>Then in your config.json should look something like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;prefix&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;X&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;token&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;X&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;channelid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;X&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;guildid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;X&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>What you are going to store:&lt;/p>
&lt;ul>
&lt;li>Prefix = That is the initial character to know that the message is for your block&lt;/li>
&lt;li>Token = Is your bot discord token, you can copy it from the developer &lt;a class="link" href="https://discord.com/developers/applications" target="_blank" rel="noopener"
>portal&lt;/a>&lt;/li>
&lt;li>ChannelID = Is the channel where your bot is going to reply (usually the spam channel from every server)
you can find it activating the developer settings in discord&amp;rsquo;s settings and then right-clicking the channel.&lt;/li>
&lt;li>GuildID = Is the server ID&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Now we will start with the javascript Code:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// require the discord.js and cron module
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">Discord&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;discord.js&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">cron&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;cron&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// create a new Discord client
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Discord&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Client&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// remote config file where my data is stored
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">prefix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">channelid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">guildid&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;./config.json&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// When client is ready, run this:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// This will only run one time after logging in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">once&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ready&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Online as &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tag&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setActivity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;9help&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">kalamardo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">guilds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cache&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">guildid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">kalamardo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channels&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cache&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">channelid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>First we start by declaring the variables of the modules we are going to need,
then we create the discord client with the variable of &lt;code>client&lt;/code> and that is what we are going
to use to refer to discord.&lt;/p>
&lt;p>Then we create the variables from the &lt;code>config.json&lt;/code> to use them in the javascript file.
The &lt;code>client.once&lt;/code> is a discord.js function that is going to execute something just once when the bot is once ready,
as in this bot we use it to tell us that is running with the &lt;code>client.user.tag&lt;/code> that is the name of our bot,
and we declare the variables of the channel where we want to send the messages.&lt;/p>
&lt;h3 id="setting-up-cron">Setting up Cron&lt;/h3>
&lt;p>Cron is a npm library that allows us to run something on scheadule, we will use it
to notify us everytime we have class!&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.npmjs.com/package/cron" target="_blank" rel="noopener"
>docs&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>to install it we need to execute:&lt;/p>
&lt;p>&lt;code>npm install cron&lt;/code>&lt;/p>
&lt;p>Now we are going to create every cron job to run when the bot once log in:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">notificationclass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`You have class! GO NOW &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">idukay&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">classbreak&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;You have a break right now, patience and be calm, enjoy!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// send a message if it is the time specified.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 00 13 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 35 13 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 10 14 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 45 14 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">classbreak&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification5&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 00 15 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 35 15 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification7&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 10 16 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification8&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 45 16 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">classbreak&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification9&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 00 17 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notificationclass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">classnotification10&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">cron&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CronJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;00 35 17 * * 1-5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`You have ended your classes for today! enjoy the rest of your day`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// When you want to start it, use:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">classnotification1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification6&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification7&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification8&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification9&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">classnotification10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// login to Discord with token
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As you see the cronjob format of time is:&lt;/p>
&lt;ul>
&lt;li>Seconds: 0-59&lt;/li>
&lt;li>Minutes: 0-59&lt;/li>
&lt;li>Hours: 0-23&lt;/li>
&lt;li>Day of Month: 1-31&lt;/li>
&lt;li>Months: 0-11 (Jan-Dec)&lt;/li>
&lt;li>Day of Week: 0-6 (Sun-Sat)&lt;/li>
&lt;/ul>
&lt;p>So right now is where you want to edit to your school scheadule and your own messages!
Try it to be useful (like the zoom link of the class for example) so it can save you some time!
After that, we login to discord with the &lt;code>client.login(token);&lt;/code> function.&lt;/p>
&lt;h3 id="create-reply-comments">Create reply comments&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">help`&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// reply in the same channel from it was sent
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">help&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// you concatenate messages with the else if block
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">calendar`&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`There you go! &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">calendar&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">idukay`&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Voila! &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">idukay&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">mail`&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Sent! &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">gmail&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">day`&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Today&amp;#39;s scheadule: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">days&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">today&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">content&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">prefix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">info`&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`This was made by Said Neder\nGithub: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">github&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">\nDiscord: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">discordid&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>First we use the &lt;code>client.on()&lt;/code> function to listen to new messages to do something about it,
which in this case is to reply to the messages.&lt;/p>
&lt;p>And then we use a big if/else block to control the flow of the program, there is where we decide
the messages that we are going to listen, to reply them.&lt;/p>
&lt;h3 id="finally-running-the-bot">Finally running the bot!&lt;/h3>
&lt;p>And to see your final project use this commnad:
&lt;code>node bot.js&lt;/code>
Since this runs in the back end, and we use node for that, and enjoy your new bot!&lt;/p>
&lt;p>But it will only run if you are running the task, if you want to have it live 24/7 we have a
extra step!&lt;/p>
&lt;h3 id="setting-up-the-bot-live-on-heroku-optional">Setting up the bot live on heroku! (optional)&lt;/h3>
&lt;p>We will go straight to the chase my boi!&lt;/p>
&lt;p>First we need to create in our file a git repo, we do that with:&lt;/p>
&lt;p>&lt;code>git init&lt;/code>&lt;/p>
&lt;p>Then, we create a &lt;code>Procfile&lt;/code> inside of our folder project with this text:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">worker: npm start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And that means that the heroku server is going to execute the code in a form of a worker, not as a webpage.&lt;/p>
&lt;p>And now we add everything to git:&lt;/p>
&lt;p>&lt;code>git add .&lt;/code>&lt;/p>
&lt;p>And then we commit the files added:&lt;/p>
&lt;p>&lt;code>git commit -m &amp;quot;deployment&amp;quot;&lt;/code>&lt;/p>
&lt;p>Now we need to create a heroku account and create a new app &lt;a class="link" href="https://www.heroku.com/" target="_blank" rel="noopener"
>over here!&lt;/a>&lt;/p>
&lt;p>After that we download the &lt;a class="link" href="https://devcenter.heroku.com/articles/heroku-cli" target="_blank" rel="noopener"
>heroku cli&lt;/a> in our system,
when that is done we login into the cli with the command&lt;/p>
&lt;p>&lt;code>heroku login&lt;/code>
And after that we just push it to heroku!&lt;/p>
&lt;p>&lt;code>git push heroku main&lt;/code>&lt;/p>
&lt;p>When that is done we go into the dashboard &amp;gt; resources and deactivate the web dyno by just clicking edit and switching off the slide,
and now we turn on the worker that should appear, now it should be left like this&lt;/p>
&lt;p>&lt;img src="https://blog.crazyc4t.xyz/images/botheroku.png"
loading="lazy"
alt="image example"
>&lt;/p>
&lt;p>And after that you are done!
Hope that you enjoyed the guide!&lt;/p></description></item></channel></rss>